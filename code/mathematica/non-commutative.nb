(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     15654,        450]
NotebookOptionsPosition[     14760,        425]
NotebookOutlinePosition[     15124,        441]
CellTagsIndexPosition[     15081,        438]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"--", 
      RowBox[{"-", "Scalar"}]}], " ", 
     RowBox[{"Definitions", "--"}]}], "-"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "ScalarQ", "]"}], ";"}], "\[IndentingNewLine]", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ScalarQ", "[", 
      RowBox[{"n_", "?", "NumberQ"}], "]"}], ":=", "True"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ScalarQ", "[", "_aOp", "]"}], ":=", "False"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ScalarQ", "[", "_aOpDagger", "]"}], ":=", "False"}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SetScalar", "[", "k_", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ScalarQ", "[", "k", "]"}], "=", "True"}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"-", "NonCommutativeMultiply"}]}], " ", 
      RowBox[{"Rules", "--"}]}], "-"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "NonCommutativeMultiply", "]"}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"NonCommutativeMultiply", "[", "]"}], ":=", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"NonCommutativeMultiply", "[", "aa_", "]"}], ":=", "aa"}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"NonCommutativeMultiply", "[", 
      RowBox[{"aa___", ",", 
       RowBox[{"xx_", "+", "yy_"}], ",", "bb___"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"NonCommutativeMultiply", "[", 
       RowBox[{"aa", ",", "xx", ",", "bb"}], "]"}], "+", 
      RowBox[{"NonCommutativeMultiply", "[", 
       RowBox[{"aa", ",", "yy", ",", "bb"}], "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"NonCommutativeMultiply", "[", 
      RowBox[{"aa___", ",", 
       RowBox[{"NonCommutativeMultiply", "[", 
        RowBox[{"bb_", ",", "cc__"}], "]"}], ",", "dd___"}], "]"}], ":=", 
     RowBox[{"NonCommutativeMultiply", "[", 
      RowBox[{"aa", ",", "bb", ",", "cc", ",", "dd"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"NonCommutativeMultiply", "[", 
      RowBox[{"aa___", ",", 
       RowBox[{"i_", "?", "ScalarQ"}], ",", "bb___"}], "]"}], ":=", 
     RowBox[{"i", "*", 
      RowBox[{"NonCommutativeMultiply", "[", 
       RowBox[{"aa", ",", "bb"}], "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"NonCommutativeMultiply", "[", 
      RowBox[{"aa___", ",", 
       RowBox[{
        RowBox[{"i_", "?", "ScalarQ"}], "*", "cc_"}], ",", "bb___"}], "]"}], ":=", 
     RowBox[{"i", "*", 
      RowBox[{"NonCommutativeMultiply", "[", 
       RowBox[{"aa", ",", "cc", ",", "bb"}], "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"NonCommutativeMultiply", "[", 
       RowBox[{"aa___", ",", 
        RowBox[{"aOp", "[", "i_Integer", "]"}], ",", 
        RowBox[{"aOp", "[", "j_Integer", "]"}], ",", "bb___"}], "]"}], "/;", 
      RowBox[{"j", "<", "i"}]}], ":=", 
     RowBox[{"NonCommutativeMultiply", "[", 
      RowBox[{"aa", ",", 
       RowBox[{"aOp", "[", "j", "]"}], ",", 
       RowBox[{"aOp", "[", "i", "]"}], ",", "bb"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"NonCommutativeMultiply", "[", 
       RowBox[{"aa___", ",", 
        RowBox[{"aOpDagger", "[", "i_Integer", "]"}], ",", 
        RowBox[{"aOpDagger", "[", "j_Integer", "]"}], ",", "bb___"}], "]"}], "/;", 
      RowBox[{"j", "<", "i"}]}], ":=", 
     RowBox[{"NonCommutativeMultiply", "[", 
      RowBox[{"aa", ",", 
       RowBox[{"aOpDagger", "[", "j", "]"}], ",", 
       RowBox[{"aOpDagger", "[", "i", "]"}], ",", "bb"}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"NonCommutativeMultiply", "[", 
       RowBox[{"aa___", ",", 
        RowBox[{"aOp", "[", "i_Integer", "]"}], ",", 
        RowBox[{"aOpDagger", "[", "j_Integer", "]"}], ",", "bb___"}], "]"}], "/;", 
      RowBox[{"j", "\[NotEqual]", "i"}]}], ":=", 
     RowBox[{"NonCommutativeMultiply", "[", 
      RowBox[{"aa", ",", 
       RowBox[{"aOpDagger", "[", "j", "]"}], ",", 
       RowBox[{"aOp", "[", "i", "]"}], ",", "bb"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"NonCommutativeMultiply", "[", 
      RowBox[{"aa___", ",", 
       RowBox[{"aOp", "[", "i_Integer", "]"}], ",", 
       RowBox[{"aOpDagger", "[", "i_", "]"}], ",", "bb___"}], "]"}], ":=", 
     RowBox[{"-", 
      RowBox[{"NonCommutativeMultiply", "[", 
       RowBox[{"aa", ",", 
        RowBox[{"aOpDagger", "[", "i", "]"}], ",", 
        RowBox[{"aOp", "[", "i", "]"}], ",", "bb"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"-", "Example"}]}], " ", 
      RowBox[{"Usage", "--"}]}], "-"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetScalar", "[", "c", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetScalar", "[", "k", "]"}], ";"}], "\[IndentingNewLine]", "\n", 
   
   RowBox[{
    RowBox[{"exampleExpression", "=", 
     RowBox[{"NonCommutativeMultiply", "[", 
      RowBox[{
       RowBox[{"aOp", "[", "4", "]"}], ",", 
       RowBox[{
        RowBox[{"NonCommutativeMultiply", "[", 
         RowBox[{
          RowBox[{"k", "*", 
           RowBox[{"aOp", "[", "1", "]"}]}], ",", 
          RowBox[{"aOp", "[", "2", "]"}], ",", 
          RowBox[{"aOpDagger", "[", "1", "]"}]}], "]"}], "+", 
        RowBox[{"c", "*", 
         RowBox[{"NonCommutativeMultiply", "[", 
          RowBox[{
           RowBox[{"aOp", "[", "2", "]"}], ",", 
           RowBox[{"aOp", "[", "1", "]"}], ",", 
           RowBox[{"aOp", "[", "3", "]"}]}], "]"}]}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", "exampleExpression"}]}]], "Input",
 CellChangeTimes->{{3.9515362340795593`*^9, 3.951536246487529*^9}, 
   3.951536486794846*^9},ExpressionUUID->"ebcb23b9-afd6-4275-ae20-\
4a259d8f17e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", " ", 
   RowBox[{
    RowBox[{"aOp", "[", "1", "]"}], "**", 
    RowBox[{"aOp", "[", "2", "]"}], "**", 
    RowBox[{"aOp", "[", "3", "]"}], "**", 
    RowBox[{"aOp", "[", "4", "]"}]}]}], "-", 
  RowBox[{"k", " ", 
   RowBox[{
    RowBox[{"aOpDagger", "[", "1", "]"}], "**", 
    RowBox[{"aOp", "[", "1", "]"}], "**", 
    RowBox[{"aOp", "[", "2", "]"}], "**", 
    RowBox[{"aOp", "[", "4", "]"}]}]}]}]], "Output",
 CellChangeTimes->{3.9515362347769127`*^9, 3.9515363051511097`*^9},
 CellLabel->
  "Out[234]=",ExpressionUUID->"9d7ee6d8-52fd-4d74-abc4-ad360a8fd171"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"--", 
      RowBox[{"-", "Define"}]}], " ", "operators", " ", "and", " ", 
     RowBox[{"expression", "--"}]}], "-"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"aOp", "[", "1", "]"}]}], ";", "            ", 
    RowBox[{"y", "=", 
     RowBox[{"aOpDagger", "[", "1", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"expr", "=", 
     RowBox[{"c", "*", 
      RowBox[{"NonCommutativeMultiply", "[", 
       RowBox[{"y", ",", "x"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"-", "Define"}]}], " ", 
      RowBox[{"Commutator", "--"}]}], "-"}], "*)"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Commutator", "[", 
      RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"NonCommutativeMultiply", "[", 
       RowBox[{"a", ",", "b"}], "]"}], "-", 
      RowBox[{"NonCommutativeMultiply", "[", 
       RowBox[{"b", ",", "a"}], "]"}]}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"-", "Calculate"}]}], " ", "Commutators", " ", "and", " ", 
      RowBox[{"Simplify", "--"}]}], "-"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"commXY", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Commutator", "[", 
       RowBox[{"expr", ",", "x"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"commYX", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Commutator", "[", 
       RowBox[{"expr", ",", "y"}], "]"}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<[Hamilton, a]     = \>\"", ",", "commXY"}], "]"}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<[Hamilton, a^dag] = \>\"", ",", "commYX"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.951536511744912*^9, 3.9515366104239683`*^9}, {
  3.9515367350685368`*^9, 3.951536800588378*^9}, {3.951538723093491*^9, 
  3.951538727972746*^9}},
 CellLabel->
  "In[314]:=",ExpressionUUID->"e8e4963b-8ec3-487f-bde1-efe50d0857e3"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"[Hamilton, a]     = \"\>", "\[InvisibleSpace]", 
   RowBox[{"2", " ", "c", " ", 
    RowBox[{
     RowBox[{"aOpDagger", "[", "1", "]"}], "**", 
     RowBox[{"aOp", "[", "1", "]"}], "**", 
     RowBox[{"aOp", "[", "1", "]"}]}]}]}],
  SequenceForm["[Hamilton, a]     = ", 2 $CellContext`c NonCommutativeMultiply[
     $CellContext`aOpDagger[1], 
     $CellContext`aOp[1], 
     $CellContext`aOp[1]]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9515365128173103`*^9, 3.9515365723657217`*^9, {3.95153660642848*^9, 
   3.951536611153171*^9}, {3.95153673676271*^9, 3.9515367599181213`*^9}, {
   3.951536795490529*^9, 3.951536801061016*^9}, 3.951538728491118*^9},
 CellLabel->
  "During evaluation of \
In[314]:=",ExpressionUUID->"3ba8976a-5a26-42ef-b288-f6715cd656b7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"[Hamilton, a^dag] = \"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "c", " ", 
    RowBox[{
     RowBox[{"aOpDagger", "[", "1", "]"}], "**", 
     RowBox[{"aOpDagger", "[", "1", "]"}], "**", 
     RowBox[{"aOp", "[", "1", "]"}]}]}]}],
  SequenceForm[
  "[Hamilton, a^dag] = ", (-2) $CellContext`c NonCommutativeMultiply[
     $CellContext`aOpDagger[1], 
     $CellContext`aOpDagger[1], 
     $CellContext`aOp[1]]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9515365128173103`*^9, 3.9515365723657217`*^9, {3.95153660642848*^9, 
   3.951536611153171*^9}, {3.95153673676271*^9, 3.9515367599181213`*^9}, {
   3.951536795490529*^9, 3.951536801061016*^9}, 3.95153872849226*^9},
 CellLabel->
  "During evaluation of \
In[314]:=",ExpressionUUID->"cad90c5e-09a8-4590-9716-36ce78c59d31"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"--", 
      RowBox[{"-", "Nested"}]}], " ", 
     RowBox[{"Commutators", "--"}]}], "-"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nestedCommXYX", "=", 
     RowBox[{"Commutator", "[", 
      RowBox[{"commXY", ",", "x"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"nestedCommXYY", "=", 
     RowBox[{"Commutator", "[", 
      RowBox[{"commXY", ",", "y"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"nestedCommYXX", "=", 
     RowBox[{"Commutator", "[", 
      RowBox[{"commYX", ",", "x"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"nestedCommYXY", "=", 
     RowBox[{"Commutator", "[", 
      RowBox[{"commYX", ",", "y"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<[[Hamilton, x], x] = \>\"", ",", "nestedCommXYX"}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<[[Hamilton, x], y] = \>\"", ",", "nestedCommXYY"}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<[[Hamilton, y], x] = \>\"", ",", "nestedCommYXX"}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<[[Hamilton, y], y] = \>\"", ",", "nestedCommYXY"}], "]"}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"-", "More"}]}], " ", "Nested", " ", "Commutators", " ", 
      RowBox[{
       RowBox[{"(", "Example", ")"}], "--"}]}], "-"}], "*)"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"nestedCommXYXYX", "=", 
     RowBox[{"Commutator", "[", 
      RowBox[{"nestedCommXYY", ",", "x"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<[[[Hamilton, x], y], x] = \>\"", ",", "nestedCommXYXYX"}], 
     "]"}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nestedCommYXYXY", "=", 
     RowBox[{"Commutator", "[", 
      RowBox[{"nestedCommYXY", ",", "y"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<[[[Hamilton, y], x], y] = \>\"", ",", "nestedCommYXYXY"}], 
     "]"}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"-", "General"}]}], " ", "Nested", " ", "Commutators", " ", 
      RowBox[{
       RowBox[{"(", "Example", ")"}], "--"}]}], "-"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"nestedComm", "[", 
      RowBox[{"expression_", ",", "operator_", ",", "depth_Integer"}], "]"}], 
     ":=", 
     RowBox[{"Nest", "[", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{"Hamilton", ",", 
         RowBox[{"Commutator", "[", 
          RowBox[{"Hamilton", ",", "operator"}], "]"}]}], "]"}], ",", 
       "expression", ",", "depth"}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<[Hamilton, x] (depth 3) = \>\"", ",", 
      RowBox[{"nestedComm", "[", 
       RowBox[{"Hamilton", ",", "x", ",", "3"}], "]"}]}], "]"}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<[Hamilton, y] (depth 3) = \>\"", ",", 
      RowBox[{"nestedComm", "[", 
       RowBox[{"Hamilton", ",", "y", ",", "3"}], "]"}]}], "]"}], ";"}], 
   "\n"}]}]], "Input",ExpressionUUID->"128edf2e-cc34-4910-b14d-90c15efa5e39"]
},
WindowSize->{1920, 1052},
WindowMargins->{{0, Automatic}, {0, Automatic}},
Magnification:>0.9 Inherited,
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 6042, 164, 690, "Input",ExpressionUUID->"ebcb23b9-afd6-4275-ae20-4a259d8f17e7"],
Cell[6625, 188, 603, 16, 33, "Output",ExpressionUUID->"9d7ee6d8-52fd-4d74-abc4-ad360a8fd171"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7265, 209, 2234, 65, 316, "Input",ExpressionUUID->"e8e4963b-8ec3-487f-bde1-efe50d0857e3"],
Cell[CellGroupData[{
Cell[9524, 278, 822, 19, 24, "Print",ExpressionUUID->"3ba8976a-5a26-42ef-b288-f6715cd656b7"],
Cell[10349, 299, 859, 21, 24, "Print",ExpressionUUID->"cad90c5e-09a8-4590-9716-36ce78c59d31"]
}, Open  ]]
}, Open  ]],
Cell[11235, 324, 3521, 99, 624, "Input",ExpressionUUID->"128edf2e-cc34-4910-b14d-90c15efa5e39"]
}
]
*)

